{"version":3,"file":"static/js/33.76b21b6c.chunk.js","mappings":"uMAmBWA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,ECJpB,EAbc,CACZ,CACED,GAAIN,IACJU,KAAM,OACNC,KAAM,KAER,CACEL,GAAIN,IACJU,KAAM,SACNC,KAAM,Y,mBCTGC,EAAaC,EAAAA,GAAAA,GAAH,0DAKVC,EAAgBD,EAAAA,GAAAA,IAAH,8FAKbE,EAAaF,EAAAA,GAAAA,GAAH,0I,SCUvB,EAlBe,WACX,IAAMG,EAAWC,EAAAA,KAAU,gBAAGX,EAAH,EAAGA,GAAII,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OACvB,SAACC,EAAD,WACI,SAAC,KAAD,CAASM,MAAO,CAC1BC,eAAgB,OAChBC,MAAO,WACMC,GAAIV,EAHP,SAGcD,KAJDJ,EADM,IAQ3B,OACI,SAACQ,EAAD,WACI,0BACI,SAACC,EAAD,UAAaC,OAI5B,C","sources":["../node_modules/nanoid/index.browser.js","components/modules/Layout/Navbar/items.js","components/modules/Layout/Navbar/Navbar.styled.jsx","components/modules/Layout/Navbar/Navbar.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\n\nconst items = [\n  {\n    id: nanoid(),\n    text: 'Home',\n    link: '/',\n  },\n  {\n    id: nanoid(),\n    text: 'Movies',\n    link: '/movies',\n  },\n];\n\nexport default items;","import styled from \"styled-components\";\n\nexport const NavbarItem = styled.li`\n padding: 8px;\nfont-size: 18px;\n`;\n\nexport const NavbarWrapper = styled.div`\n padding: 15px;\nbox-shadow: 0px -5px 10px 0px rgba(0, 0, 0, 0.683);\n`;\n\nexport const NavbarList = styled.ul`\nmargin: 0;\npadding: 0;\nmargin-left: 50px;\nlist-style: none;\ndisplay: flex;\nalign-items: center;\ngap: 15px;\n`;","import { NavLink } from 'react-router-dom';\nimport items from './items';\nimport { NavbarItem, NavbarList, NavbarWrapper } from './Navbar.styled';\n\nconst Navbar = () => {\n    const elements = items.map(({ id, text, link }) => (\n        <NavbarItem key={id}>\n            <NavLink style={{\n  textDecoration: 'none',\n  color: '#171212',\n            }} to={link}>{text}</NavLink>\n        </NavbarItem>\n    ));\n    return (\n        <NavbarWrapper>\n            <nav>\n                <NavbarList>{elements}</NavbarList>\n            </nav>\n        </NavbarWrapper>\n    )\n};\n\nexport default Navbar;"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","text","link","NavbarItem","styled","NavbarWrapper","NavbarList","elements","items","style","textDecoration","color","to"],"sourceRoot":""}