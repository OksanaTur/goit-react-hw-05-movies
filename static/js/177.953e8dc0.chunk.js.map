{"version":3,"file":"static/js/177.953e8dc0.chunk.js","mappings":"gOAEaA,EAAYC,EAAAA,GAAAA,GAAH,2FAOTC,EAAaD,EAAAA,GAAAA,GAAH,yD,SCHjBE,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MAGXC,EAAWH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACxB,SAACR,EAAD,WACI,SAAC,KAAD,CAAMS,MAAO,CACTC,eAAgB,OAChBC,MAAO,SAEPC,MAAO,CAAEC,KAAMV,GACfW,GAAE,iBAAYN,GALlB,SAOKD,KARQC,EADO,IAa5B,OACI,+BACI,SAACV,EAAD,UAAYO,KAGvB,EAED,GAAeU,EAAAA,EAAAA,MAAKd,GAEpBA,EAAWe,aAAe,CAAEd,OAAQ,G,kMC9BvBe,EAAwBlB,EAAAA,GAAAA,IAAH,wC,SCsClC,EAhCuB,WACnB,OAA4BmB,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBJ,OAjBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,sGAEZJ,GAAW,GAFC,UAGUK,EAAAA,EAAAA,KAHV,OAGNC,EAHM,OAIZC,QAAQC,IAAIF,GACZR,EAAUQ,GALE,gDAMLG,EANK,KAMLA,SACPP,EAASO,EAASC,KAAKC,SACvBC,EAAAA,GAAAA,MAAA,gBAAqBH,EAASC,KAAKC,UARvB,yBAUZX,GAAW,GAVC,4EAAH,qDAajBI,GACH,GAAE,CAACN,EAAWE,KAGX,UAACJ,EAAD,WACKG,IAAW,SAACc,EAAA,EAAD,IACXZ,IAAS,SAAC,KAAD,CAAgBa,MAAM,YAC/BjC,IAAU,SAACJ,EAAA,EAAD,CAAWI,OAAQA,MAGrC,ECpCYkC,EAAgBrC,EAAAA,GAAAA,GAAH,6GCU1B,EATiB,WACb,OACI,iCACI,SAACqC,EAAD,8BACA,SAAC,EAAD,MAGX,C,wLCRKC,E,QAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJf,EAAU,mCAAG,2GAAOgB,EAAP,+BAAc,EAAd,SACCL,EAASM,IAAI,uBAAwB,CACxDH,OAAQ,CACJE,KAAAA,KAHc,uBACdX,EADc,EACdA,KADc,kBAMfA,EAAKJ,SANU,2CAAH,qDASViB,EAAe,mCAAG,WAAMC,GAAN,yFACJR,EAASM,IAAT,iBAAuBE,EAAvB,MADI,uBACnBd,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfe,EAAW,mCAAG,WAAMC,GAAN,yFACAV,EAASM,IAAT,iBAA+B,CAClDH,OAAQ,CACJO,MAAAA,KAHe,uBACfhB,EADe,EACfA,KADe,kBAMhBA,EAAKJ,SANW,2CAAH,sDASXqB,EAAY,mCAAG,WAAMH,GAAN,yFACDR,EAASM,IAAT,iBAAuBE,EAAvB,cADC,uBAChBd,EADgB,EAChBA,KADgB,kBAEjBA,EAAKkB,MAFY,2CAAH,sDAKZC,EAAU,mCAAG,WAAML,GAAN,yFACCR,EAASM,IAAT,iBAAuBE,EAAvB,eADD,uBACdd,EADc,EACdA,KADc,kBAEfA,EAAKJ,SAFU,2CAAH,qD","sources":["components/modules/Layout/MovieList/MovieList.styled.jsx","components/modules/Layout/MovieList/MovieList.jsx","components/modules/Layout/TrendingMovies/TrendingMovies.styled.jsx","components/modules/Layout/TrendingMovies/TrendingMovies.jsx","components/pages/CastPage/HomePage/HomePage.styled.jsx","components/pages/CastPage/HomePage/HomePage.jsx","components/shared/services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MovieList = styled.ul`\nmargin: 0;\nmargin-left: 50px;\nmargin-bottom: 50px;\npadding: 0;\n`;\n\nexport const MoviesItem = styled.li`\npadding: 8px;\nfont-size: 18px;\n`;","import PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MoviesItem, MovieList } from './MovieList.styled';\n\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n    // console.log(location);\n\n    const elements = movies.map(({ title, id }) => (\n        <MoviesItem key={id}>\n            <Link style={{\n                textDecoration: 'none',\n                color: 'black',\n            }}\n                state={{ from: location }}\n                to={`/movie/${id}`}\n            >\n                {title}\n            </Link>\n        </MoviesItem>\n    ));\n    return (\n        <>\n            <MovieList>{elements}</MovieList>\n        </>\n    )\n};\n\nexport default memo(MoviesList);\n\nMoviesList.defaultProps = { movies: [], };\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        })\n    ),\n};\n","import styled from \"styled-components\";\n\nexport const TrendingMoviesWrapper = styled.div`\ncolor:#F6F6F6;\n`;","import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MovieList from '../MovieList/MovieList';\nimport Loader from 'components/shared/loader/Loader';\nimport { filmSearch } from 'components/shared/services/api';\nimport { TrendingMoviesWrapper } from './TrendingMovies.styled';\n\nconst TrendingMovies = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n\nuseEffect(() => {\n    const fetchMovies = async () => {\n        try {\n            setLoading(true);\n            const results = await filmSearch();\n            console.log(results);\n            setMovies(results);\n        } catch ({ response }) {\n            setError(response.data.message);\n            toast.error(`Sorry,${response.data.message}`);\n        } finally {\n            setLoading(false)\n        }\n    }\n    fetchMovies();\n}, [setMovies, setLoading]);\n\nreturn (\n    <TrendingMoviesWrapper>\n        {loading && <Loader />}\n        {error && <ToastContainer theme=\"colored\" />}\n        {movies && <MovieList movies={movies}/>}\n    </TrendingMoviesWrapper>\n)\n};\n\nexport default TrendingMovies;","import styled from \"styled-components\";\n\nexport const HomePageTitle = styled.h2`\nmargin: 0;\npadding: 15px;\nmargin-top: 20px;\nmargin-left: 30px;\nfont-size: 32px;\n`;","import TrendingMovies from \"components/modules/Layout/TrendingMovies/TrendingMovies\";\nimport { HomePageTitle } from \"./HomePage.styled\";\n\nconst HomePage = () => {\n    return (\n        <>\n            <HomePageTitle>Trending today</HomePageTitle>\n            <TrendingMovies />\n        </>\n    )\n};\n\nexport default HomePage;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'e6335e45e66a73839ab061046ca7a249',\n    },\n});\n\nexport const filmSearch = async (page = 1) => {\n    const { data } = await instance.get('/trending/movie/day?', {\n        params: {\n            page,\n        }\n    })\n    return data.results;\n};\n\nexport const getMovieDetails = async movie_id => {\n    const { data } = await instance.get(`/movie/${movie_id}?`);\n    return data;\n};\n\nexport const MovieSearch = async query => {\n    const { data } = await instance.get(`/search/movie?`, {\n        params: {\n            query\n        },\n    });\n    return data.results;\n};\n\nexport const getMovieCast = async movie_id => {\n    const { data } = await instance.get(`/movie/${movie_id}/credits?`);\n    return data.cost;\n};\n\nexport const getReviews = async movie_id => {\n    const { data } = await instance.get(`/movie/${movie_id}//reviews?`);\n    return data.results;\n};"],"names":["MovieList","styled","MoviesItem","MoviesList","movies","location","useLocation","elements","map","title","id","style","textDecoration","color","state","from","to","memo","defaultProps","TrendingMoviesWrapper","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","filmSearch","results","console","log","response","data","message","toast","Loader","theme","HomePageTitle","instance","axios","baseURL","params","api_key","page","get","getMovieDetails","movie_id","MovieSearch","query","getMovieCast","cost","getReviews"],"sourceRoot":""}