{"version":3,"file":"static/js/336.0c98a9a7.chunk.js","mappings":"sTAEaA,EAAiBC,EAAAA,GAAAA,IAAH,uCAIdC,EAAcD,EAAAA,GAAAA,GAAH,yDAKXE,EAAcF,EAAAA,GAAAA,GAAH,gEAKXG,EAASH,EAAAA,GAAAA,GAAH,yD,SCRbI,EAAc,WACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAELE,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAS,mCAAG,sGAEdN,GAAW,GAFG,UAGQO,EAAAA,EAAAA,IAAWJ,GAHnB,OAKS,KAFjBK,EAHQ,QAKFC,QACVC,EAAAA,GAAAA,KAAW,4BAEXZ,EAAUU,GARE,gDASLG,EATK,KASLA,SACTT,EAASS,EAASC,KAAKC,SACvBH,EAAAA,GAAAA,MAAA,gBAAqBC,EAASC,KAAKC,UAXrB,yBAadb,GAAW,GAbG,4EAAH,qDAiBfM,GACA,GAAE,CAACH,IAEH,IAAMW,EAAUjB,EAAOkB,KAAI,gBAAGC,EAAH,EAAGA,QAAaC,GAAhB,EAAYC,GAAZ,EAAgBD,QAAhB,OAC3B,UAACxB,EAAD,YACE,SAACC,EAAD,UAASuB,KACT,uBAAID,MAHqB,IAO7B,OACE,gCACGjB,IAAW,SAACoB,EAAA,EAAD,IACXlB,IAAS,SAAC,KAAD,CAAgBmB,MAAM,YAC/BvB,EAAOY,OAAS,IACf,SAACnB,EAAD,WACE,SAACE,EAAD,UAAcsB,QAKvB,EAED,GAAeO,EAAAA,EAAAA,MAAK1B,E,wLCrDd2B,E,QAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAU,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACCN,EAASO,IAAI,uBAAwB,CACxDJ,OAAQ,CACJG,KAAAA,KAHc,uBACdhB,EADc,EACdA,KADc,kBAMfA,EAAKJ,SANU,2CAAH,qDASVsB,EAAe,mCAAG,WAAMC,GAAN,yFACJT,EAASO,IAAT,iBAAuBE,EAAvB,MADI,uBACnBnB,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfoB,EAAW,mCAAG,WAAMC,GAAN,yFACAX,EAASO,IAAT,iBAA+B,CAClDJ,OAAQ,CACJQ,MAAAA,KAHe,uBACfrB,EADe,EACfA,KADe,kBAMhBA,EAAKJ,SANW,2CAAH,sDASX0B,EAAY,mCAAG,WAAMH,GAAN,yFACDT,EAASO,IAAT,iBAAuBE,EAAvB,cADC,uBAChBnB,EADgB,EAChBA,KADgB,kBAEjBA,EAAKuB,MAFY,2CAAH,sDAKZ5B,EAAU,mCAAG,WAAMwB,GAAN,yFACCT,EAASO,IAAT,iBAAuBE,EAAvB,eADD,uBACdnB,EADc,EACdA,KADc,kBAEfA,EAAKJ,SAFU,2CAAH,qD","sources":["components/pages/ReviewsPage/ReviewsPage.styled.jsx","components/pages/ReviewsPage/ReviewsPage.jsx","components/shared/services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsWrapper = styled.div`\npadding:15px;\n`;\n\nexport const ReviewsList = styled.ul`\npadding: 0;\nmargin-left: 20px;\n`;\n\nexport const ReviewsItem = styled.li`\nmargin-bottom: 15px;\nfont-size: 12px;\n`;\n\nexport const Author = styled.h4`\nmargin: 0;\nmargin-bottom: 5px;\n`;","import { useState, useEffect,memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from 'components/shared/loader/Loader';\nimport { getReviews } from 'components/shared/services/api';\nimport { Author, ReviewsItem, ReviewsList, ReviewsWrapper } from './ReviewsPage.styled';\n\nconst ReviewsPage = () => {\nconst [movies, setMovies] = useState([]);\nconst [loading, setLoading] = useState(false);\nconst [error, setError] = useState(null);\nconst { movieId } = useParams();\n    \n   useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const results = await getReviews(movieId);\n        // console.log(results);\n        if (results.length === 0) {\n          toast.info('Sorry, reviews not found');\n          }\n          setMovies(results);\n      } catch ({ response }) {\n        setError(response.data.message);\n        toast.error(`Sorry,${response.data.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n   }, [movieId]);\n    \n    const element = movies.map(({ content, id, author }) => (\n    <ReviewsItem>\n      <Author>{author}</Author>\n      <p>{content}</p>\n    </ReviewsItem>\n  ));\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <ToastContainer theme=\"colored\" />}\n      {movies.length > 0 && (\n        <ReviewsWrapper>\n          <ReviewsList>{element}</ReviewsList>\n        </ReviewsWrapper>\n      )}\n    </>\n  );\n};\n\nexport default memo(ReviewsPage);","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'e6335e45e66a73839ab061046ca7a249',\n    },\n});\n\nexport const filmSearch = async (page = 1) => {\n    const { data } = await instance.get('/trending/movie/day?', {\n        params: {\n            page,\n        }\n    })\n    return data.results;\n};\n\nexport const getMovieDetails = async movie_id => {\n    const { data } = await instance.get(`/movie/${movie_id}?`);\n    return data;\n};\n\nexport const MovieSearch = async query => {\n    const { data } = await instance.get(`/search/movie?`, {\n        params: {\n            query\n        },\n    });\n    return data.results;\n};\n\nexport const getMovieCast = async movie_id => {\n    const { data } = await instance.get(`/movie/${movie_id}/credits?`);\n    return data.cost;\n};\n\nexport const getReviews = async movie_id => {\n    const { data } = await instance.get(`/movie/${movie_id}//reviews?`);\n    return data.results;\n};"],"names":["ReviewsWrapper","styled","ReviewsList","ReviewsItem","Author","ReviewsPage","useState","movies","setMovies","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCast","getReviews","results","length","toast","response","data","message","element","map","content","author","id","Loader","theme","memo","instance","axios","baseURL","params","api_key","filmSearch","page","get","getMovieDetails","movie_id","MovieSearch","query","getMovieCast","cost"],"sourceRoot":""}