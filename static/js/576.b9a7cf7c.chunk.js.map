{"version":3,"file":"static/js/576.b9a7cf7c.chunk.js","mappings":"kVAEaA,EAAqBC,EAAAA,GAAAA,OAAH,qSAkBlBC,EAAsBD,EAAAA,GAAAA,IAAH,sJASnBE,EAAoBF,EAAAA,GAAAA,IAAH,+FAMjBG,EAAOH,EAAAA,GAAAA,IAAH,6DAKJI,EAAoBJ,EAAAA,GAAAA,GAAH,4EAMjBK,EAAQL,EAAAA,GAAAA,GAAH,2CAIJM,EAAmBN,EAAAA,GAAAA,GAAH,+IAUjBO,EAAcP,EAAAA,GAAAA,IAAH,0F,SC4DxB,EA9GyB,WAAO,IAAD,EAC3B,GAA0BQ,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAwBR,EAAAA,EAAAA,UAAS,IAAjC,eAAOS,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,WAGrCG,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAU,mCAAG,sGAEff,GAAW,GAFI,UAIOgB,EAAAA,EAAAA,IAAgBT,GAJvB,OAITU,EAJS,OAMfnB,EAASmB,GAETb,EAAUa,EAAQd,QAElBG,EAAQW,EAAQC,cAVD,kDAWNC,EAXM,KAWNA,SACTjB,EAASiB,EAASC,KAAKC,SACvBC,EAAAA,GAAAA,MAAA,gBAAqBH,EAASC,KAAKC,UAbpB,yBAefrB,GAAW,GAfI,6EAAH,qDAkBhBe,GACC,GAAE,CAACR,EAAST,EAAUE,IAEvB,IACMuB,EAAWpB,EAAOqB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAAkB,wBAAcD,GAALC,EAA3B,IACtBC,GAAOC,EAAAA,EAAAA,UAAQ,kBAAM,IAAIC,KAAKxB,GAAMyB,aAArB,GAAoC,CAACzB,IAE1D,OACI,iCACI,UAAClB,EAAD,CAAoB4C,KAAK,SAASC,QAN3B,kBAAMvB,EAASE,EAAf,EAMP,WACI,SAAC,MAAD,CAAqBsB,MAAO,CACxBC,YAAa,EACbC,MAAO,GACPC,OAAQ,MAJhB,cAQErC,IAAW,SAACsC,EAAA,EAAD,IAClBpC,IAAS,SAAC,KAAD,CAAgBqC,MAAM,YACzBzC,IACG,UAACR,EAAD,YACI,SAACC,EAAD,CAAmBiD,IAAG,0CAAqC1C,EAAM2C,aAAeC,IAAK5C,EAAM6C,eACvF3C,QAAQ,OACRoC,MAAM,QACNC,OAAO,WAEX,UAAC7C,EAAD,YACI,UAACC,EAAD,WAAoBK,EAAM6C,gBACtB,gCAAQf,EAAR,WAEJ,wCAAiB9B,EAAM8C,aAAe,GAAM,KAAKC,QAAQ,GAAzD,QACA,SAACnD,EAAD,sBACA,SAACC,EAAD,UAAmB6B,KACnB,SAAC9B,EAAD,yBACA,uBAAII,EAAMgD,kBAKtB,UAAClD,EAAD,YAEI,SAAC,KAAD,CACAsC,MAAO,CACXa,QAAS,QACTC,eAAgB,OAChBC,MAAO,QACPC,QAAS,EACTC,aAAc,EACdC,gBAAgB,WAElBtC,MAAO,CAAEF,KAAAA,GACTyC,GAAE,kBAAa7C,EAAb,SAVI,mBAeA,SAAC,KAAD,CACI0B,MAAO,CACfa,QAAS,QACTC,eAAgB,OAChBC,MAAO,QACPC,QAAS,EACTC,aAAc,EACdC,gBAAgB,WAElBtC,MAAO,CAAEF,KAAAA,GACTyC,GAAE,kBAAa7C,EAAb,YAVI,yBAgBV,SAAC,KAAD,MAGL,C,yLCnHK8C,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACFN,EAASO,IAAI,uBAAwB,CAC1DJ,OAAQ,CACNG,KAAAA,KAHqB,uBACjBvC,EADiB,EACjBA,KADiB,kBAMlBA,EAAKH,SANa,2CAAH,qDASXD,EAAe,mCAAG,WAAM6C,GAAN,yFACNR,EAASO,IAAT,iBAAuBC,EAAvB,MADM,uBACrBzC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKf0C,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASO,IAAI,iBAAkB,CACpDJ,OAAQ,CACNO,MAAAA,KAHqB,uBACjB3C,EADiB,EACjBA,KADiB,kBAMlBA,EAAKH,SANa,2CAAH,sDASX+C,EAAY,mCAAG,WAAMH,GAAN,yFACHR,EAASO,IAAT,iBAAuBC,EAAvB,cADG,uBAClBzC,EADkB,EAClBA,KADkB,kBAEnBA,EAAK6C,MAFc,2CAAH,sDAKZC,EAAU,mCAAG,WAAML,GAAN,yFACDR,EAASO,IAAT,iBAAuBC,EAAvB,eADC,uBAChBzC,EADgB,EAChBA,KADgB,kBAEjBA,EAAKH,SAFY,2CAAH,qD","sources":["components/pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/pages/MovieDetailsPage/MovieDetailsPage.jsx","components/shared/services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MovieDetailsButton = styled.button`\nmargin-top: 20px;\nmargin-left: 20px;\npadding: 5px 10px 5px 8px;\ndisplay: flex;\nalign-items: center;\nborder: none;\nborder-radius: 5px;\nbackground-color: rgb(223, 223, 223);\ncolor: inherit;\nfont-size: 18px;\ncursor: pointer;\n\n&:hover{\n    color: #C6D6C6;\n}\n`;\n\nexport const MovieDetailsWrapper = styled.div`\nmargin: 15px;\npadding: 15px;\ndisplay: flex;\nmargin-top: 20px;\nborder: 1px solid rgb(164, 155, 155);\nwidth: fit-content;\n`;\n\nexport const MovieDetailsImage = styled.img`\ndisplay: block;\nbackground-color: rgb(223, 223, 223);\nwidth: 300px;\n`;\n\nexport const Info = styled.div`\ndisplay: block;\nmargin-left: 28px;\n`;\n\nexport const MovieDetailsTitle = styled.h2`\nmargin: 0;\nmargin-top: 5px;\nmargin-bottom: 10px;\n`;\n\nexport const Topic = styled.h3`\nmargin-top: 20px;\n`;\n\nexport const  MovieDetailsList = styled.ul`\nmargin: 0;\nmargin-bottom: 15px;\npadding: 0;\ndisplay: flex;\ngap: 15px;\nlist-style: none;\ncolor: rgb(56, 54, 54);\n`;\n\nexport const WrapperLink = styled.div`\npadding: 20px;\ndisplay: flex;\nalign-items: center;\ngap: 20px;\n`;","import PropTypes from 'prop-types';\nimport { useState, useEffect, useMemo } from 'react';\nimport {useParams,useNavigate,Link,Outlet,useLocation} from 'react-router-dom';\nimport { getMovieDetails } from 'components/shared/services/api';\nimport Loader from 'components/shared/loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MdKeyboardBackspace } from 'react-icons/md';\nimport { MovieDetailsButton, MovieDetailsImage, Info, MovieDetailsList, MovieDetailsTitle, Topic, MovieDetailsWrapper, WrapperLink } from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [genres, setGenres] = useState([]);\n    const [date, setDate] = useState('');\n\n    const { movieId } = useParams();\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from || '/movies';\n    // console.log(location)\n\n    useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n\n        const results = await getMovieDetails(movieId);\n\n        setMovie(results);\n\n        setGenres(results.genres);\n\n        setDate(results.release_date);\n      } catch ({ response }) {\n        setError(response.data.message);\n        toast.error(`Sorry,${response.data.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n    }, [movieId, setMovie, setLoading]);\n    \n    const goBack = () => navigate(from);\n    const elements = genres.map(({ name, id }) => <li key={id}>{name}</li>);\n    const year = useMemo(() => new Date(date).getFullYear(), [date]);\n\n    return (\n        <>\n            <MovieDetailsButton type='button' onClick={goBack}>\n                <MdKeyboardBackspace style={{\n                    marginRight: 5,\n                    width: 20,\n                    height: 20,\n                }} \n                /> Go back\n            </MovieDetailsButton>\n             {loading && <Loader />}\n      {error && <ToastContainer theme=\"colored\" />}\n            {movie && (\n                <MovieDetailsWrapper>\n                    <MovieDetailsImage src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`} alt={movie.original_title}\n                        loading='lazy'\n                        width=\"300px\"\n                        height=\"450px\"\n                    />\n                    <Info>\n                        <MovieDetailsTitle>{movie.original_title}\n                            <span>({year})</span>\n                        </MovieDetailsTitle>\n                        <p>User score:{((movie.vote_average / 10) * 100).toFixed(0)}%</p>\n                        <Topic>Genres</Topic>\n                        <MovieDetailsList>{elements}</MovieDetailsList>\n                        <Topic>Overviews</Topic>\n                        <p>{movie.overview}</p>\n                    </Info>\n                </MovieDetailsWrapper>\n            )}\n\n            <WrapperLink>\n\n                <Link \n                style={{\n            display: 'block',\n            textDecoration: 'none',\n            color: 'black',\n            padding: 8,\n            borderRadius: 5,\n            backgroundColor:'#dfdfdf',\n        }}\n          state={{ from }}\n          to={`/movies/${movieId}/cast`}\n         \n        >\n          Cast\n        </Link>\n                <Link\n                    style={{\n            display: 'block',\n            textDecoration: 'none',\n            color: 'black',\n            padding: 8,\n            borderRadius: 5,\n            backgroundColor:'#dfdfdf',\n        }}\n          state={{ from }}\n          to={`/movies/${movieId}/reviews`}\n          \n        >\n          Reviews\n        </Link>\n      </WrapperLink>\n      <Outlet />\n        </>\n    )\n};\n\nexport default MovieDetailsPage;\n\nMovieDetailsPage.propTypes = {\n  onClick: PropTypes.func,\n  state: PropTypes.string,\n};","// e6335e45e66a73839ab061046ca7a249\nimport axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e6335e45e66a73839ab061046ca7a249',\n  },\n});\n\nexport const filmsSearch = async (page = 1) => {\n  const { data } = await instance.get('/trending/movie/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}?`);\n  return data;\n};\n\nexport const MovieSearch = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}//reviews?`);\n  return data.results;\n};\n\n\n"],"names":["MovieDetailsButton","styled","MovieDetailsWrapper","MovieDetailsImage","Info","MovieDetailsTitle","Topic","MovieDetailsList","WrapperLink","useState","movie","setMovie","loading","setLoading","error","setError","genres","setGenres","date","setDate","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","getMovieDetails","results","release_date","response","data","message","toast","elements","map","name","id","year","useMemo","Date","getFullYear","type","onClick","style","marginRight","width","height","Loader","theme","src","poster_path","alt","original_title","vote_average","toFixed","overview","display","textDecoration","color","padding","borderRadius","backgroundColor","to","instance","axios","baseURL","params","api_key","filmsSearch","page","get","movie_id","MovieSearch","query","getMovieCast","cast","getReviews"],"sourceRoot":""}